/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet';
import { LeafInfo, leafInfoBeet } from './LeafInfo';
export type AuthorizationData = {
  derivedKeySeeds: beet.COption<Uint8Array[]>;
  leafInfo: beet.COption<LeafInfo>;
  name: string;
};

/**
 * @category userTypes
 * @category generated
 */
export const authorizationDataBeet = new beet.FixableBeetArgsStruct<AuthorizationData>(
  [
    ['derivedKeySeeds', beet.coption(beet.array(beet.bytes))],
    ['leafInfo', beet.coption(leafInfoBeet)],
    ['name', beet.utf8String],
  ],
  'AuthorizationData',
);
